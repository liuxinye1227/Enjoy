<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.facishare.pay.business.dao.impl.UserChargeDaoImpl">
    
    <resultMap id="BaseResultMap" type="userChargeDo">
        <id property="id" column="id" />
        <result property="orderNo" column="order_no" />
        <result property="enterpriseAccount" column="enterprise_account" />
        <result property="fsUserId" column="fs_user_id" />
        <result property="chargeNo" column="charge_no" />
        <result property="chargeWay" column="charge_way" />
        <result property="sysFee" column="sys_fee" />
        <result property="actualFee" column="actual_fee" />
        <result property="status" column="status" typeHandler="com.facishare.pay.common.utils.EnumStatusHandler"/>
        <result property="amount" column="amount" />
        <result property="channelId" column="channel_id" />
        <result property="requestTime" column="request_time" />
        <result property="requestInfo" column="request_info" />
        <result property="responseTime" column="response_time" />
        <result property="responseInfo" column="response_info" />
        <result property="sucReturnUrl" column="suc_return_url" />
        <result property="failReturnUrl" column="fail_return_url" />
        <result property="chargePayNo" column="charge_pay_no" />
    </resultMap>
    <insert id="addUserCharge" parameterType="userChargeDo" useGeneratedKeys="true" keyProperty="id">

        <selectKey resultType="Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user_charge_log
        (
        order_no,
        enterprise_account,
        fs_user_id,
        charge_no,
        charge_way,
        sys_fee,
        actual_fee,
        status,
        amount,
        channel_id,request_time,requestInfo
        )
        values
        (#{orderNo},#{enterpriseAccount}, #{fsUserId}, #{chargeNo}, #{chargeWay},
        #{sysFee},#{actualFee}, #{status}, #{amount}, #{channelId}, #{requestTime}, #{requestInfo})

    </insert>

    <update id="updateUserChargeLog" parameterType="userChargeDo" >
        update user_charge_log
        SET status=#{status},
        response_time=#{responseTime},
        response_info=#{responseInfo},
        suc_return_url=#{sucReturnUrl} ,
        fail_return_url=#{failReturnUrl} ,
        charge_pay_no=#{chargePayNo}
        where order_no = #{orderNo}
        and charge_no=#{chargeNo}
        and enterprise_account=#{enterpriseAccount},
        and fs_user_id=#{fsUserId}

    </update>
    <sql id="All_Column">
        id,
        order_no,
        enterprise_account,
        fs_user_id,
        charge_no,
        charge_way,
        sys_fee,
        actual_fee,
        status,
        amount,
        channel_id,
        request_time,
        request_info,
        response_time,
        response_info,
        suc_return_url,
        fail_return_url,
        charge_pay_no
    </sql>
    <select id="getUserChargeByOrderNoAndStatus" parameterType="map" resultMap="BaseResultMap">
        SELECT
        <include refid="All_Column"></include>
        FROM user_charge userCharge
        where  order_no = #{orderNo}
            AND status=#{status}
    </select>

    <select id="getUserChargeByOrderNo" parameterType="map" resultMap="BaseResultMap">
        SELECT
        <include refid="All_Column"></include>
        FROM user_charge userCharge
        where  order_no = #{orderNo}
    </select>


    <!-- 分页查询用户充值流水 -->
	<select id="queryUserChargePage" parameterType="map" resultMap="BaseResultMap">
        SELECT 
        <include refid="All_Column"></include>
        FROM user_charge userCharge
        <include refid="userChargeCondition"></include>
        ORDER BY request_time DESC
        limit #{limit} offset #{offset}
    </select>
    
    <!-- 查询用户充值流水总数 -->
    <select id="queryUserChargeCount" parameterType="map" resultType="long">
        SELECT 
            COUNT(*)
        FROM user_charge userCharge
        <include refid="userChargeCondition"></include>
    </select>
	
	<!-- 更新状态 -->
    <update id="updateChargeStatus" parameterType="map">
        UPDATE user_charge SET status = #{status} WHERE id = #{id}
    </update>
	
    <sql id="userChargeCondition">
        <where>
            <if test="orderNo != null">
                userCharge.order_no = #{orderNo}
            </if>
            <if test="enterpriseAccount != null">
                AND userCharge.enterprise_account = #{enterpriseAccount}
            </if>
            <if test="fsUserId != null">
                AND userCharge.fs_user_id = #{fsUserId}
            </if>
            <if test="chargeNo != null">
                AND userCharge.charge_no = #{chargeNo}
            </if>
            <if test="chargeWay != null">
                AND userCharge.charge_way = #{chargeWay}
            </if>
            <if test="status != null">
                AND userCharge.status = #{status}
            </if>
            <if test="channelId != null">
                AND userCharge.channel_id = #{channelId}
            </if>
            <if test="minAmount != null">
                <![CDATA[AND userCharge.amount >= #{minAmount}]]>  
            </if>
            <if test="maxAmount != null">
                <![CDATA[AND userCharge.amount < #{maxAmount}]]>  
            </if>
            <if test="requestBeginTime != null">
                <![CDATA[
                AND userCharge.request_time >= #{requestBeginTime}
                ]]>                 
            </if>
            <if test="requestEndTime != null">
                <![CDATA[
                AND userCharge.request_time < #{requestEndTime}
                ]]>
            </if>
            <if test="responseBeginTime != null">
                <![CDATA[
                AND userCharge.response_time >= #{responseBeginTime}
                ]]>                 
            </if>
            <if test="responseEndTime != null">
                <![CDATA[
                AND userCharge.response_time < #{responseEndTime}
                ]]>
            </if>
        </where>
    </sql>
</mapper>
